name: release

on:
  push:
    tags:
      - "**"

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: a-novel-kit/workflows/publish-actions/auto-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  database-build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    env:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_HOST_AUTH_METHOD: scram-sha-256
      POSTGRES_INITDB_ARGS: --auth=scram-sha-256
    steps:
      - uses: a-novel-kit/workflows/build-actions/docker@master
        id: database_build
        with:
          file: build/database.Dockerfile
          image_name: ${{ github.repository }}/database
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_args: >-
            -e POSTGRES_PASSWORD="${POSTGRES_PASSWORD}" 
            -e POSTGRES_USER="${POSTGRES_USER}" 
            -e POSTGRES_DB="${POSTGRES_DB}"
            -e POSTGRES_HOST_AUTH_METHOD="${POSTGRES_HOST_AUTH_METHOD}"
            -e POSTGRES_INITDB_ARGS="${POSTGRES_INITDB_ARGS}"

  migrations-build:
    runs-on: ubuntu-latest
    needs: [database-build]
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    services:
      postgres:
        image: ghcr.io/a-novel/service-story-schematics/database:${{ github.ref_name }}
        ports:
          - "5432:5432"
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_HOST_AUTH_METHOD: scram-sha-256
          POSTGRES_INITDB_ARGS: --auth=scram-sha-256
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    env:
      POSTGRES_DSN: postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable
    steps:
      - uses: a-novel-kit/workflows/build-actions/docker-job@master
        with:
          file: build/migrations.Dockerfile
          image_name: ${{ github.repository }}/jobs/migrations
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_args: -e POSTGRES_DSN="${POSTGRES_DSN}"

  api-build:
    needs: [database-build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    services:
      postgres:
        image: ghcr.io/a-novel/service-story-schematics/database:${{ github.ref_name }}
        ports:
          - "5432:5432"
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_HOST_AUTH_METHOD: scram-sha-256
          POSTGRES_INITDB_ARGS: --auth=scram-sha-256

      postgres-json-keys:
        image: ghcr.io/a-novel/service-json-keys/database:v1.3.7
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_HOST_AUTH_METHOD: scram-sha-256
          POSTGRES_INITDB_ARGS: --auth=scram-sha-256
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      json-keys:
        image: ghcr.io/a-novel/service-json-keys/standalone:v1.3.7
        ports:
          - "4001:8080"
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        env:
          POSTGRES_DSN: postgres://postgres:postgres@postgres-json-keys:5432/postgres?sslmode=disable
          APP_MASTER_KEY: "fec0681a2f57242211c559ca347721766f8a3acd8ed2e63b36b3768051c702ca"
    env:
      POSTGRES_DSN: postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable
      JSON_KEYS_SERVICE_URL: http://0.0.0.0:4001/v1
      AUTH_PLATFORM_URL: http://localhost:6001
      OPENAI_TOKEN: ${{ secrets.GROQ_TOKEN }}
      DEBUG: true
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/run-migrations
      - uses: a-novel-kit/workflows/build-actions/docker@master
        with:
          file: build/api.Dockerfile
          image_name: ${{ github.repository }}/api
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_args: >-
            -e POSTGRES_DSN="${POSTGRES_DSN}"
            -e JSON_KEYS_SERVICE_URL="${JSON_KEYS_SERVICE_URL}"
            -e AUTH_PLATFORM_URL="${AUTH_PLATFORM_URL}"
            -e DEBUG="${DEBUG}"
            -e OPENAI_TOKEN="${OPENAI_TOKEN}"

  standalone-build:
    needs: [database-build]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    services:
      postgres:
        image: ghcr.io/a-novel/service-story-schematics/database:${{ github.ref_name }}
        ports:
          - "5432:5432"
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_HOST_AUTH_METHOD: scram-sha-256
          POSTGRES_INITDB_ARGS: --auth=scram-sha-256

      postgres-json-keys:
        image: ghcr.io/a-novel/service-json-keys/database:v1.3.7
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres
          POSTGRES_HOST_AUTH_METHOD: scram-sha-256
          POSTGRES_INITDB_ARGS: --auth=scram-sha-256
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      json-keys:
        image: ghcr.io/a-novel/service-json-keys/standalone:v1.3.7
        ports:
          - "4001:8080"
        credentials:
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        env:
          POSTGRES_DSN: postgres://postgres:postgres@postgres-json-keys:5432/postgres?sslmode=disable
          APP_MASTER_KEY: "fec0681a2f57242211c559ca347721766f8a3acd8ed2e63b36b3768051c702ca"
    env:
      POSTGRES_DSN: postgres://postgres:postgres@localhost:5432/postgres?sslmode=disable
      JSON_KEYS_SERVICE_URL: http://0.0.0.0:4001/v1
      AUTH_PLATFORM_URL: http://localhost:6001
      OPENAI_TOKEN: ${{ secrets.GROQ_TOKEN }}
      DEBUG: true
    steps:
      - uses: actions/checkout@v5
      - uses: ./.github/actions/run-migrations
      - uses: a-novel-kit/workflows/build-actions/docker@master
        with:
          file: build/standalone.Dockerfile
          image_name: ${{ github.repository }}/standalone
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_args: >-
            -e POSTGRES_DSN="${POSTGRES_DSN}"
            -e JSON_KEYS_SERVICE_URL="${JSON_KEYS_SERVICE_URL}"
            -e AUTH_PLATFORM_URL="${AUTH_PLATFORM_URL}"
            -e DEBUG="${DEBUG}"
            -e OPENAI_TOKEN="${OPENAI_TOKEN}"
