name: release

on:
  push:
    tags:
      - v*

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: a-novel-kit/workflows/publish-actions/auto-release@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  api-build:
    needs: [release]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    services:
      postgres:
        image: postgres:17-alpine
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: postgres

      pg-bouncer:
        image: docker.io/bitnami/pgbouncer:latest
        ports:
          - "6432:6432"
        env:
          PGBOUNCER_PORT: 6432
          POSTGRESQL_PORT: 5432
          POSTGRESQL_HOST: postgres
          POSTGRESQL_PASSWORD: postgres
          POSTGRESQL_USER: postgres
          POSTGRESQL_DATABASE: postgres
          PGBOUNCER_DATABASE: postgres
          PGBOUNCER_USERLIST: '"postgres" "postgres"'
    env:
      DSN: postgres://postgres:postgres@localhost:6432/postgres?sslmode=disable
      GROQ_TOKEN: ${{ secrets.GROQ_TOKEN }}
    steps:
      - uses: a-novel-kit/workflows/build-actions/docker-rest-api@master
        with:
          file: build/api.Dockerfile
          image_name: ${{ github.repository }}/api
          image_tags: ${{ github.ref_name }},prod
          github_token: ${{ secrets.GITHUB_TOKEN }}
          run_args: -e DSN="${DSN}" -e MASTER_KEY="${MASTER_KEY}"
